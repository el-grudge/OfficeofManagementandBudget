values = c("above"="#00ba38", "below"="#f8766d")) +
labs(subtitle="Budget Deviation between years 2020 & 2021",
title= "Diverging Bar Chart") +
coord_flip()
# Group bar chart
df_grp <- df
df_grp <- df_grp %>% select(-programs, -X2019, -X2020) %>% gather(key = year, value = amount, X2021,X2022,X2023,X2024,X2025,X2026,X2027,X2028,X2029,X2030)
for(i in 1:length(unique(df_grp$year))){
df_grp$year[df_grp$year == unique(df_grp$year)[i]] = substring(unique(df_grp$year)[i], 2)
}
df_grp %>%
ggplot(aes(year, amount)) +
geom_bar(aes(fill = category, color = category), stat = "identity", position = "dodge") +
theme(legend.position="top") +
labs(subtitle="Budget Spending between from 2021 to 2030",
title= "Group Bar Chart")
p1 + scale_x_continuous(limits = c(0, 10))
df_grp %>%
ggplot(aes(year, amount)) +
geom_bar(aes(fill = category, color = category), stat = "identity", position = "dodge") +
theme(legend.position="top") +
labs(subtitle="Budget Spending between from 2021 to 2030",
title= "Group Bar Chart") +
scale_x_continuous(limits = c(2020, 2030))
df_grp %>%
ggplot(aes(year, amount)) +
geom_bar(aes(fill = category, color = category), stat = "identity", position = "dodge") +
theme(legend.position="top") +
labs(subtitle="Budget Spending between from 2021 to 2030",
title= "Group Bar Chart") + scale_x_continuous(limits = c(2020, 2030))
c(2020, 2030)
#  * modify the axis limits
p1 + scale_x_continuous(limits = c(2, 6))
mpg
#Examples
p1 <- ggplot(mpg, aes(displ, hwy)) + geom_point()
p1
#  * modify the axis limits
p1 + scale_x_continuous(limits = c(2, 6))
p1 + scale_x_continuous(limits = c(0, 10))
df_grp %>%
ggplot(aes(year, amount)) +
geom_bar(aes(fill = category, color = category), stat = "identity", position = "dodge") +
theme(legend.position="top") +
labs(subtitle="Budget Spending between from 2021 to 2030",
title= "Group Bar Chart") + scale_x_continuous(limits = c(2020, 2030))
# you can also use the short hand functions `xlim()` and `ylim()`
p1 + xlim(2, 6)
#  * choose where the ticks appear
p1 + scale_x_continuous(breaks = c(2, 4, 6))
# Typically you'll pass a function to the `labels` argument.
# Some common formats are built into the scales package:
df <- data.frame(
x = rnorm(10) * 100000,
y = seq(0, 1, length.out = 10)
)
p2 <- ggplot(df, aes(x, y)) + geom_point()
p2
p2 + scale_y_continuous(labels = scales::percent)
p2 + scale_y_continuous(labels = scales::dollar)
p2 + scale_x_continuous(labels = scales::comma)
# You can also override the default linear mapping by using a
# transformation. There are three shortcuts:
p1 + scale_y_log10()
p1 + scale_y_sqrt()
p1 + scale_y_reverse()
# Or you can supply a transformation in the `trans` argument:
p1 + scale_y_continuous(trans = scales::reciprocal_trans())
df_grp %>%
ggplot(aes(year, amount)) +
geom_bar(aes(fill = category, color = category), stat = "identity", position = "dodge") +
theme(legend.position="top") +
labs(subtitle="Budget Spending between from 2021 to 2030",
title= "Group Bar Chart") + scale_x_continuous(limits = c(2021, 2030))
?scale_x_continuous
factor(df_grp$year, levels = df_grp$year)
df_grp$year
factor(df_grp$year, levels = year)
factor(df_grp$year, levels = .$year)
df_grp %>% factor(year, levels = .$year)
df_grp
factor(df_grp$year, levels = df_grp$year)
factor(df_grp$year)
df_grp %>%
ggplot(aes(factor(df_grp$year), amount)) +
geom_bar(aes(fill = category, color = category), stat = "identity", position = "dodge") +
theme(legend.position="top") +
labs(subtitle="Budget Spending between from 2021 to 2030",
title= "Group Bar Chart") + scale_x_continuous(limits = c(2021, 2030))
df_grp %>%
ggplot(aes(factor(df_grp$year), amount)) +
geom_bar(aes(fill = category, color = category), stat = "identity", position = "dodge") +
theme(legend.position="top") +
labs(subtitle="Budget Spending between from 2021 to 2030",
title= "Group Bar Chart")
df_grp %>%
ggplot(aes(as.numeric(factor(df_grp$year)), amount)) +
geom_bar(aes(fill = category, color = category), stat = "identity", position = "dodge") +
theme(legend.position="top") +
labs(subtitle="Budget Spending between from 2021 to 2030",
title= "Group Bar Chart") + scale_x_continuous(limits = c(2021, 2030))
df_grp %>%
ggplot(aes(as.numeric(factor(df_grp$year)), amount)) +
geom_bar(aes(fill = category, color = category), stat = "identity", position = "dodge") +
theme(legend.position="top") +
labs(subtitle="Budget Spending between from 2021 to 2030",
title= "Group Bar Chart")
df_grp %>%
ggplot(aes(as.numeric(factor(df_grp$year)), amount)) +
geom_bar(aes(fill = category, color = category), stat = "identity", position = "dodge") +
theme(legend.position="top") +
labs(subtitle="Budget Spending between from 2021 to 2030",
title= "Group Bar Chart") + scale_x_continuous(limits = c(2021, 2030))
library(tidyverse)
library(readxl)
data <- read.csv("budgets.csv")
df <- data.frame(data)
df_2021dev <- select(df, category, X2020, X2021)
df_2021dev$dev <- (df_2021dev$X2021-df_2021dev$X2020) / df_2021dev$X2020
df_2021dev$devz <- round((df_2021dev$dev - mean(df_2021dev$dev)) / sd(df_2021dev$dev),2)
df_2021dev$thresh <- ifelse(df_2021dev$devz > 0, "above", "below")
df_2021dev <- df_2021dev[order(df_2021dev$devz),]
df_2021dev$category <- factor(df_2021dev$category, levels = df_2021dev$category)
# Diverging bar chart
ggplot(df_2021dev, aes(x=category, y=devz, label=devz)) +
geom_bar(stat='identity', aes(fill=df_2021dev$thresh), width=.9)  +
scale_fill_manual(name="Budget Deviation",
labels = c("Above Average", "Below Average"),
values = c("above"="#00ba38", "below"="#f8766d")) +
labs(subtitle="Budget Deviation between years 2020 & 2021",
title= "Diverging Bar Chart") +
coord_flip()
# Group bar chart
df_grp <- df
df_grp <- df_grp %>% select(-programs, -X2019, -X2020) %>% gather(key = year, value = amount, X2021,X2022,X2023,X2024,X2025,X2026,X2027,X2028,X2029,X2030)
for(i in 1:length(unique(df_grp$year))){
df_grp$year[df_grp$year == unique(df_grp$year)[i]] = substring(unique(df_grp$year)[i], 2)
}
df_grp %>%
ggplot(aes(year, amount)) +
geom_bar(aes(fill = category, color = category), stat = "identity", position = "dodge") +
theme(legend.position="top") +
labs(subtitle="Budget Spending between from 2021 to 2030",
title= "Group Bar Chart")
install.packages(understatr)
install.packages("understatr")
remotes::install_github('ewenme/understatr')
install_github('ewenme/understatr')
remotes::install_github('ewenme/understatr')
library(tidyverse)
library(readxl)
data <- read.csv("budgets.csv")
df <- data.frame(data)
df_2021dev <- select(df, category, X2020, X2021)
df_2021dev$dev <- (df_2021dev$X2021-df_2021dev$X2020) / df_2021dev$X2020
df_2021dev$devz <- round((df_2021dev$dev - mean(df_2021dev$dev)) / sd(df_2021dev$dev),2)
df_2021dev$thresh <- ifelse(df_2021dev$devz > 0, "above", "below")
df_2021dev <- df_2021dev[order(df_2021dev$devz),]
df_2021dev$category <- factor(df_2021dev$category, levels = df_2021dev$category)
# Diverging bar chart
ggplot(df_2021dev, aes(x=category, y=devz, label=devz)) +
geom_bar(stat='identity', aes(fill=df_2021dev$thresh), width=.9)  +
scale_fill_manual(name="Budget Deviation",
labels = c("Above Average", "Below Average"),
values = c("above"="#00ba38", "below"="#f8766d")) +
labs(subtitle="Budget Deviation between years 2020 & 2021",
title= "Diverging Bar Chart") +
coord_flip()
# Group bar chart
# Group bar chart
df_grp <- df
df_grp <- df_grp %>% select(-category, -X2019, -X2020) %>% gather(key = year, value = amount, X2021,X2022,X2023,X2024,X2025,X2026,X2027,X2028,X2029,X2030)
for(i in 1:length(unique(df_grp$year))){
df_grp$year[df_grp$year == unique(df_grp$year)[i]] = substring(unique(df_grp$year)[i], 2)
}
df_grp %>%
ggplot(aes(year, amount)) +
geom_bar(aes(fill = programs, color = category), stat = "identity", position = "dodge") +
theme(legend.position="top") +
labs(subtitle="Budget Spending between from 2021 to 2030",
title= "Group Bar Chart")
df_grp %>%
ggplot(aes(year, amount)) +
geom_bar(aes(fill = programs, color = programs), stat = "identity", position = "dodge") +
theme(legend.position="top") +
labs(subtitle="Budget Spending between from 2021 to 2030",
title= "Group Bar Chart")
df_grp %>%
ggplot(aes(year, amount)) +
geom_bar(aes(fill = programs, color = programs), stat = "identity", position = "dodge", width = 0.5) +
theme(legend.position="top") +
labs(subtitle="Budget Spending between from 2021 to 2030",
title= "Group Bar Chart")
# Diverging bar chart
ggplot(df_2021dev, aes(x=category, y=devz, label=devz)) +
geom_bar(stat='identity', aes(fill=df_2021dev$thresh), width=.9)  +
scale_fill_manual(name="Budget Deviation",
labels = c("Above Average", "Below Average"),
values = c("above"="#00ba38", "below"="#f8766d")) +
labs(subtitle="Budget Deviation between years 2020 & 2021",
title= "Diverging Bar Chart") +
coord_flip()
library(tidyverse)
library(readxl)
data <- read.csv("budgets.csv")
df <- data.frame(data)
df_2021dev <- select(df, category, X2020, X2021)
df_2021dev$dev <- (df_2021dev$X2021-df_2021dev$X2020) / df_2021dev$X2020
df_2021dev$devz <- round((df_2021dev$dev - mean(df_2021dev$dev)) / sd(df_2021dev$dev),2)
df_2021dev$thresh <- ifelse(df_2021dev$devz > 0, "above", "below")
df_2021dev <- df_2021dev[order(df_2021dev$devz),]
df_2021dev$category <- factor(df_2021dev$category, levels = df_2021dev$category)
# Diverging bar chart
ggplot(df_2021dev, aes(x=category, y=devz, label=devz)) +
geom_bar(stat='identity', aes(fill=df_2021dev$thresh), width=.9)  +
scale_fill_manual(name="Budget Deviation",
labels = c("Above Average", "Below Average"),
values = c("above"="#00ba38", "below"="#f8766d")) +
labs(subtitle="Budget Deviation between years 2020 & 2021",
title= "Diverging Bar Chart") +
coord_flip()
library(tidyverse)
library(readxl)
data <- read.csv("budgets.csv")
df <- data.frame(data)
View(df)
df_2021dev <- select(df, category, X2020, X2021)
View(df_2021dev)
df_2021dev$dev <- (df_2021dev$X2021-df_2021dev$X2020) / df_2021dev$X2020
View(df_2021dev)
df_2021dev$devz <- round((df_2021dev$dev - mean(df_2021dev$dev)) / sd(df_2021dev$dev),2)
View(df_2021dev)
df_2021dev$thresh <- ifelse(df_2021dev$devz > 0, "above", "below")
View(df_2021dev)
df_2021dev <- df_2021dev[order(df_2021dev$devz),]
View(df_2021dev)
df_2021dev$category <- factor(df_2021dev$category, levels = df_2021dev$category)
# Diverging bar chart
ggplot(df_2021dev, aes(x=category, y=devz, label=devz)) +
geom_bar(stat='identity', aes(fill=df_2021dev$thresh), width=.9)  +
scale_fill_manual(name="Budget Deviation",
labels = c("Above Average", "Below Average"),
values = c("above"="#00ba38", "below"="#f8766d")) +
labs(subtitle="Budget Deviation between years 2020 & 2021",
title= "Diverging Bar Chart") +
coord_flip()
View(df_2021dev)
library(tidyverse)
library(readxl)
data <- read.csv("budgets.csv")
df <- data.frame(data)
library(tidyverse)
library(readxl)
data <- read.csv("budgets.csv")
df <- data.frame(data)
View(df)
df_2021dev <- select(df, category, X2020, X2021)
View(df_2021dev)
df_2021dev$dev <- (df_2021dev$X2021-df_2021dev$X2020) / df_2021dev$X2020
View(df_2021dev)
df_2021dev$devz <- round((df_2021dev$dev - mean(df_2021dev$dev)) / sd(df_2021dev$dev),2)
View(df_2021dev)
library(tidyverse)
library(readxl)
data <- read.csv("budgets.csv")
df <- data.frame(data)
View(df)
df_2021dev <- select(df, category, X2020, X2021)
View(df_2021dev)
df_2021dev1 <- df_2021dev
df_2021dev1$dev <- (df_2021dev1$X2021-df_2021dev1$X2020) / df_2021dev1$X2020
View(df_2021dev1)
df_2021dev2 <- df_2021dev1
df_2021dev2$devz <- round((df_2021dev2$dev - mean(df_2021dev2$dev)) / sd(df_2021dev2$dev),2)
View(df_2021dev2)
df_2021dev3 <- df_2021dev2
df_2021dev3$thresh <- ifelse(df_2021dev3$devz > 0, "above", "below")
View(df_2021dev3)
df_2021dev4 <- df_2021dev3
df_2021dev4 <- df_2021dev4[order(df_2021dev4$devz),]
View(df_2021dev4)
df_2021dev5 <- df_2021dev4
View(df_2021dev5)
df_2021dev6 <- df_2021dev5
df_2021dev6$category <- factor(df_2021dev6$category, levels = df_2021dev6$category)
View(df_2021dev6)
library(tidyverse)
library(readxl)
data <- read.csv("budgets.csv")
df <- data.frame(data)
df_2021dev <- select(df, category, X2020, X2021)
df_2021dev$dev <- (df_2021dev$X2021-df_2021dev$X2020) / df_2021dev$X2020
df_2021dev$devz <- round((df_2021dev$dev - mean(df_2021dev$dev)) / sd(df_2021dev$dev),2)
df_2021dev$thresh <- ifelse(df_2021dev$devz > 0, "above", "below")
df_2021dev <- df_2021dev[order(df_2021dev$devz),]
factor(df_2021dev$category, levels = df_2021dev$category)
library(tidyverse)
library(readxl)
data <- read.csv("budgets.csv")
df <- data.frame(data)
df_2021dev <- select(df, category, X2020, X2021)
df_2021dev$dev <- (df_2021dev$X2021-df_2021dev$X2020) / df_2021dev$X2020
df_2021dev$devz <- round((df_2021dev$dev - mean(df_2021dev$dev)) / sd(df_2021dev$dev),2)
df_2021dev$thresh <- ifelse(df_2021dev$devz > 0, "above", "below")
df_2021dev <- df_2021dev[order(df_2021dev$devz),]
df_2021dev$category <- factor(df_2021dev$category, levels = df_2021dev$category)
# Diverging bar chart
ggplot(df_2021dev, aes(x=category, y=devz, label=devz)) +
geom_bar(stat='identity', aes(fill=df_2021dev$thresh), width=.9)  +
scale_fill_manual(name="Budget Deviation",
labels = c("Above Average", "Below Average"),
values = c("above"="#00ba38", "below"="#f8766d")) +
labs(subtitle="Budget Deviation between years 2020 & 2021",
title= "Diverging Bar Chart") +
coord_flip()
# Group bar chart
df_grp <- df
df_grp <- df_grp %>% select(-category, -X2019, -X2020) %>% gather(key = year, value = amount, X2021,X2022,X2023,X2024,X2025,X2026,X2027,X2028,X2029,X2030)
for(i in 1:length(unique(df_grp$year))){
df_grp$year[df_grp$year == unique(df_grp$year)[i]] = substring(unique(df_grp$year)[i], 2)
}
df_grp %>%
ggplot(aes(year, amount)) +
geom_bar(aes(fill = programs, color = programs), stat = "identity", position = "dodge", width = 0.5) +
theme(legend.position="top") +
labs(subtitle="Budget Spending between from 2021 to 2030",
title= "Group Bar Chart")
library(tidyverse)
library(readxl)
data <- read.csv("budgets.csv")
df <- data.frame(data)
df_2021dev <- select(df, category, X2020, X2021)
df_2021dev$dev <- (df_2021dev$X2021-df_2021dev$X2020) / df_2021dev$X2020
df_2021dev$devz <- round((df_2021dev$dev - mean(df_2021dev$dev)) / sd(df_2021dev$dev),2)
df_2021dev$thresh <- ifelse(df_2021dev$devz > 0, "above", "below")
df_2021dev <- df_2021dev[order(df_2021dev$devz),]
df_2021dev$category <- factor(df_2021dev$category, levels = df_2021dev$category)
# Diverging bar chart
ggplot(df_2021dev, aes(x=category, y=devz, label=devz)) +
geom_bar(stat='identity', aes(fill=df_2021dev$thresh), width=.9)  +
scale_fill_manual(name="Budget Deviation",
labels = c("Above Average", "Below Average"),
values = c("above"="#00ba38", "below"="#f8766d")) +
labs(subtitle="Budget Deviation between years 2020 & 2021",
title= "Diverging Bar Chart") +
coord_flip()
# Group bar chart
df_grp <- df
df_grp <- df_grp %>% select(-category, -X2019, -X2020) %>% gather(key = year, value = amount, X2021,X2022,X2023,X2024,X2025,X2026,X2027,X2028,X2029,X2030)
for(i in 1:length(unique(df_grp$year))){
df_grp$year[df_grp$year == unique(df_grp$year)[i]] = substring(unique(df_grp$year)[i], 2)
}
df_grp %>%
ggplot(aes(year, amount)) +
geom_bar(aes(fill = programs, color = programs), stat = "identity", position = "dodge", width = 0.5) +
theme(legend.position="top") +
labs(subtitle="Budget Spending between from 2021 to 2030",
title= "Group Bar Chart")
library(tidyverse)
library(readxl)
data <- read.csv("budgets.csv")
df <- data.frame(data)
df_grp <- df
df_grp <- df_grp %>% select(-programs, -X2019, -X2020) %>% gather(key = year, value = amount, X2021,X2022,X2023,X2024,X2025,X2026,X2027,X2028,X2029,X2030)
for(i in 1:length(unique(df_grp$year))){
df_grp$year[df_grp$year == unique(df_grp$year)[i]] = substring(unique(df_grp$year)[i], 2)
}
df_grp %>%
ggplot(aes(year, amount)) +
geom_bar(aes(fill = category, color = category), stat = "identity", position = "dodge") +
theme(legend.position="top") +
labs(subtitle="Budget Spending between from 2021 to 2030",
title= "Group Bar Chart")
library(tidyverse)
#Examples
p1 <- ggplot(mpg, aes(displ, hwy)) + geom_point()
p1
# Manipulating the default position scales lets you:
#  * change the axis labels
p1 +
scale_x_continuous("Engine displacement (L)") +
scale_y_continuous("Highway MPG")
# You can also use the short-cut labs().
# Use NULL to suppress axis labels
p1 + labs(x = NULL, y = NULL)
mpg
#  * modify the axis limits
p1 + scale_x_continuous(limits = c(2, 6))
p1 + scale_x_continuous(limits = c(0, 10))
# you can also use the short hand functions `xlim()` and `ylim()`
p1 + xlim(2, 6)
#  * choose where the ticks appear
p1 + scale_x_continuous(breaks = c(2, 4, 6))
#  * choose your own labels
p1 + scale_x_continuous(
breaks = c(2, 4, 6),
label = c("two", "four", "six")
)
# Typically you'll pass a function to the `labels` argument.
# Some common formats are built into the scales package:
df <- data.frame(
x = rnorm(10) * 100000,
y = seq(0, 1, length.out = 10)
)
p2 <- ggplot(df, aes(x, y)) + geom_point()
p2 + scale_y_continuous(labels = scales::percent)
p2 + scale_y_continuous(labels = scales::dollar)
p2 + scale_x_continuous(labels = scales::comma)
# You can also override the default linear mapping by using a
# transformation. There are three shortcuts:
p1 + scale_y_log10()
p1 + scale_y_sqrt()
p1 + scale_y_reverse()
# Or you can supply a transformation in the `trans` argument:
p1 + scale_y_continuous(trans = scales::reciprocal_trans())
[Package ggplot2 version 3.2.1 Index]
# bar chart comparison - ordered
df_1a %>%
arrange(Country.Region) %>%
mutate(Count.millions = as.numeric(factor(Count.millions, levels = .$Count.millions))) %>%
ggplot(aes(Year, Count.millions, fill = Country.Region, color = Country.Region)) +
geom_bar(stat = "identity", position = "dodge") +
facet_grid(vars(Indicator))
ggplot(df_2021dev, aes(x=category, y=devz, label=devz)) +
geom_bar(stat='identity', aes(fill=df_2021dev$thresh), width=.5)  +
scale_fill_manual(name="Budget Deviation",
labels = c("Above Average", "Below Average"),
values = c("above"="#00ba38", "below"="#f8766d")) +
labs(subtitle="Budget Deviation between years 2020 & 2021",
title= "Diverging Bar Chart") +
coord_flip()
df_sample <- select(df, category, X2020, X2021) %>% gather(key = year, value = amount, X2020, X2021)
df_sample$year[df_sample$year == 'X2020'] = 2020
length(df_sample$year %>% unique())
for(i in 1:length(unique(df_sample$year))){
df_sample$year[df_sample$year == unique(df_sample$year)[i]] = substring(unique(df_sample$year)[i], 2)
}
unique(df_sample$year)[1]
df_tst <- df
c <- colnames(df_tst)[5:length(colnames(df_tst))]
###
df_tst <- df_tst %>% select(-programs, -X2019, -X2020) %>% gather(key = year, value = amount, X2021,X2022,X2023,X2024,X2025,X2026,X2027,X2028,X2029,X2030)
for(i in 1:length(unique(df_tst$year))){
df_tst$year[df_tst$year == unique(df_tst$year)[i]] = substring(unique(df_tst$year)[i], 2)
}
df_tst %>%
#arrange(Country.Region) %>%
#mutate(Count.millions = as.numeric(factor(Count.millions, levels = .$Count.millions))) %>%
ggplot(aes(year, amount)) +
geom_bar(aes(fill = category, color = category), stat = "identity", position = "dodge") #+
# bar chart comparison - ordered
df_1a %>%
arrange(Country.Region) %>%
mutate(Count.millions = as.numeric(factor(Count.millions, levels = .$Count.millions))) %>%
ggplot(aes(Year, Count.millions, fill = Country.Region, color = Country.Region)) +
geom_bar(stat = "identity", position = "dodge") +
facet_grid(vars(Indicator))
ggplot(df_2021dev, aes(x=category, y=devz, label=devz)) +
geom_bar(stat='identity', aes(fill=df_2021dev$thresh), width=.5)  +
scale_fill_manual(name="Budget Deviation",
labels = c("Above Average", "Below Average"),
values = c("above"="#00ba38", "below"="#f8766d")) +
labs(subtitle="Budget Deviation between years 2020 & 2021",
title= "Diverging Bar Chart") +
coord_flip()
df_sample <- select(df, category, X2020, X2021) %>% gather(key = year, value = amount, X2020, X2021)
df_sample$year[df_sample$year == 'X2020'] = 2020
length(df_sample$year %>% unique())
for(i in 1:length(unique(df_sample$year))){
df_sample$year[df_sample$year == unique(df_sample$year)[i]] = substring(unique(df_sample$year)[i], 2)
}
unique(df_sample$year)[1]
df_tst <- df
library(tidyverse)
#Examples
p1 <- ggplot(mpg, aes(displ, hwy)) + geom_point()
p1
# Manipulating the default position scales lets you:
#  * change the axis labels
p1 +
scale_x_continuous("Engine displacement (L)") +
scale_y_continuous("Highway MPG")
# You can also use the short-cut labs().
# Use NULL to suppress axis labels
p1 + labs(x = NULL, y = NULL)
mpg
#  * modify the axis limits
p1 + scale_x_continuous(limits = c(2, 6))
p1 + scale_x_continuous(limits = c(0, 10))
# you can also use the short hand functions `xlim()` and `ylim()`
p1 + xlim(2, 6)
#  * choose where the ticks appear
p1 + scale_x_continuous(breaks = c(2, 4, 6))
#  * choose your own labels
p1 + scale_x_continuous(
breaks = c(2, 4, 6),
label = c("two", "four", "six")
)
# Typically you'll pass a function to the `labels` argument.
# Some common formats are built into the scales package:
df <- data.frame(
x = rnorm(10) * 100000,
y = seq(0, 1, length.out = 10)
)
p2 <- ggplot(df, aes(x, y)) + geom_point()
p2 + scale_y_continuous(labels = scales::percent)
p2 + scale_y_continuous(labels = scales::dollar)
p2 + scale_x_continuous(labels = scales::comma)
# You can also override the default linear mapping by using a
# transformation. There are three shortcuts:
p1 + scale_y_log10()
p1 + scale_y_sqrt()
